<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._163.king13zhi.p2p.base.mapper.RealAuthMapper">
	<resultMap id="BaseResultMap" type="com._163.king13zhi.p2p.base.domain.RealAuth">
		<id column="id" property="id"/>
		<result column="realName" property="realName"/>
		<result column="sex" property="sex"/>
		<result column="bornDate" property="bornDate"/>
		<result column="idNumber" property="idNumber"/>
		<result column="address" property="address"/>
		<result column="state" property="state"/>
		<result column="image1" property="image1"/>
		<result column="image2" property="image2"/>
		<result column="remark" property="remark"/>
		<result column="auditTime" property="auditTime"/>
		<result column="applyTime" property="applyTime"/>

		<association property="applier" javaType="com._163.king13zhi.p2p.base.domain.Logininfo" columnPrefix="ap_">
			<id column="id" property="id"/>
			<result column="username" property="username"/>
		</association>

		<association property="auditor" javaType="com._163.king13zhi.p2p.base.domain.Logininfo" columnPrefix="au_">
			<id column="id" property="id"/>
			<result column="username" property="username"/>
		</association>
	</resultMap>

	<insert id="insert"  useGeneratedKeys="true"
			keyProperty="id">
		insert into `realauth` (realName, sex, bornDate, idNumber, address, state, image1,
		image2, remark, auditTime, applyTime, auditor_id, applier_id)
		values (#{realName}, #{sex}, #{bornDate}, #{idNumber}, #{address}, #{state}, #{image1},
		#{image2}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id})
	</insert>
	<update id="updateByPrimaryKey">
		update `realauth`
		set realName = #{realName},
		sex = #{sex},
		bornDate = #{bornDate},
		idNumber = #{idNumber},
		address = #{address},
		state = #{state},
		image1 = #{image1},
		image2 = #{image2},
		remark = #{remark},
		auditTime = #{auditTime},
		applyTime = #{applyTime},
		auditor_id = #{auditor.id},
		applier_id = #{applier.id}
		where id = #{id}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" >
		select
			ra.id, ra.realName, ra.sex, ra.bornDate, ra.idNumber, ra.address, ra.state, ra.image1, ra.image2, ra.remark,
			ra.auditTime, ra.applyTime,
			ap.id ap_id ,ap.username ap_username,
			au.id au_id ,au.username au_username
		from `realauth` ra join logininfo ap on (ra.applier_id = ap.id)
			left join logininfo au on(ra.auditor_id = au.id)
		where ra.id = #{id}
	</select>

	<!--分页相关-->
	<sql id="conditionSql">
		<where>
		</where>
	</sql>

	<select id="queryPage" resultMap="BaseResultMap">
		select
		ra.id, ra.realName, ra.sex, ra.bornDate, ra.idNumber, ra.address, ra.state, ra.image1, ra.image2, ra.remark,
		ra.auditTime, ra.applyTime,
		ap.id ap_id ,ap.username ap_username,
		au.id au_id ,au.username au_username
		from `realauth` ra join logininfo ap on (ra.applier_id = ap.id)
		left join logininfo au on(ra.auditor_id = au.id)
		<include refid="conditionSql"/>
	</select>
</mapper>